<?php

namespace ShopBundle\Repository;
use Doctrine\ORM\EntityManagerInterface;
use Doctrine\ORM\NoResultException;
use Symfony\Component\Config\Definition\Exception\Exception;

/**
 * OrdersRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class OrderRepository extends \Doctrine\ORM\EntityRepository
{
	/**
	 * @var EntityManagerInterface
	 */
	private $em;

	/**
	 * OrderRepository constructor.
	 *
	 * @param EntityManagerInterface $em
	 */
	public function __construct( EntityManagerInterface $em ) {
		$this->em = $em;
	}

	public function findOneOrderJoinProducts($id){
		$query = $this->em->createQuery('SELECT o , pu , u , p 
											  FROM ShopBundle:Order o 
											  JOIN o.productUsers pu
											  JOIN o.user u
											  JOIN pu.product p
											  WHERE  o.id = :id '
		);
		$query->setParameter('id',$id);

		try {
			return $query->getSingleResult();
		} catch (NoResultException $e){
			return null;
		}
	}

	public function findOneOrderUserIsNullJoinProducts($id){
		$query = $this->em->createQuery('SELECT o , pu  , p 
											  FROM ShopBundle:Order o 
											  JOIN o.productUsers pu
											  JOIN pu.product p
											  WHERE (o.id = :id and o.user is null) or o.id = :id '
		);
		$query->setParameter('id',$id);

		try {
			return $query->getSingleResult();
		} catch (NoResultException $e){
			return null;
		}
	}
}
